// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// SVD_V
arma::mat SVD_V(arma::mat X);
RcppExport SEXP _StatComp22088_SVD_V(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(SVD_V(X));
    return rcpp_result_gen;
END_RCPP
}
// scaleC
arma::mat scaleC(arma::mat X, bool center, bool scale);
RcppExport SEXP _StatComp22088_scaleC(SEXP XSEXP, SEXP centerSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< bool >::type center(centerSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleC(X, center, scale));
    return rcpp_result_gen;
END_RCPP
}
// SVDS_V
arma::mat SVDS_V(arma::sp_mat X, int k);
RcppExport SEXP _StatComp22088_SVDS_V(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(SVDS_V(X, k));
    return rcpp_result_gen;
END_RCPP
}
// gibbsC
NumericMatrix gibbsC(double mu1, double sigma1, double mu2, double sigma2, double rho, int N);
RcppExport SEXP _StatComp22088_gibbsC(SEXP mu1SEXP, SEXP sigma1SEXP, SEXP mu2SEXP, SEXP sigma2SEXP, SEXP rhoSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu1(mu1SEXP);
    Rcpp::traits::input_parameter< double >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< double >::type mu2(mu2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(gibbsC(mu1, sigma1, mu2, sigma2, rho, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_StatComp22088_SVD_V", (DL_FUNC) &_StatComp22088_SVD_V, 1},
    {"_StatComp22088_scaleC", (DL_FUNC) &_StatComp22088_scaleC, 3},
    {"_StatComp22088_SVDS_V", (DL_FUNC) &_StatComp22088_SVDS_V, 2},
    {"_StatComp22088_gibbsC", (DL_FUNC) &_StatComp22088_gibbsC, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_StatComp22088(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
